name: hivenote backend continous integration

permissions:
  id-token: write
  contents: read

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
  REMOTE_USERNAME: ${{ secrets.REMOTE_USERNAME }}
  REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
  REMOTE_PRIVATE_KEY: ${{ secrets.REMOTE_PRIVATE_KEY }}
  REMOTE_PASSPHRASE: ${{ secrets.REMOTE_PASSPHRASE }}
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432
  POSTGRES_DB: hivenote-db
  DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
  DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'zulu'
          cache: maven

      #      - name: run tests
      #        env:
      #          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      #        run: |
      #          mvn -s "${{ github.workspace }}/.github/workflows/maven-settings.xml" -B verify --file pom.xml

      - name: try to build docker image
        run: |
          sh build.sh

#  deploy:
#    if: ${{ github.event_name != 'pull_request' }}
#    runs-on: ubuntu-latest
#    needs: [ build ]
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up JDK 18
#        uses: actions/setup-java@v4
#        with:
#          java-version: '18'
#          distribution: 'zulu'
#          cache: maven
#
#      - name: Build with Maven
#        run: mvn --batch-mode --update-snapshots verify
#
#      - name: try to build docker image
#        run: |
#          sh publish.sh
#
#      - uses: Burnett01/rsync-deployments@5.2
#          name: Add start.sh script to remote
#          with:
#            switches: -av --progress
#            path: start.sh
#            remote_path: ~/start.sh
#            remote_port: ${{env.REMOTE_PORT}}
#            remote_host: ${{env.REMOTE_HOST}}
#            remote_user: ${{env.REMOTE_USERNAME}}
#            remote_key: ${{env.REMOTE_PRIVATE_KEY}}
#            remote_key_pass: ${{env.REMOTE_PASSPHRASE}}
#
#      - uses: Burnett01/rsync-deployments@5.2
#          name: Add docker-compose.yml to remote
#          with:
#            switches: -av --progress
#            path: docker-compose.yml
#            remote_path: ~/docker-compose.yml
#            remote_host: ${{env.REMOTE_HOST}}
#            remote_port: ${{env.REMOTE_PORT}}
#            remote_user: ${{env.REMOTE_USERNAME}}
#            remote_key: ${{env.REMOTE_PRIVATE_KEY}}
#            remote_key_pass: ${{env.REMOTE_PASSPHRASE}}
#
#      - name: Rebuild and start docker containers
#          uses: appleboy/ssh-action@master
#          env:
#            DOCKER_USER: ${{env.DOCKER_USER}}
#            DOCKER_PASS: ${{ env.DOCKER_ACCESS_TOKEN }}
#          with:
#            host: ${{env.REMOTE_HOST}}
#            username: ${{env.REMOTE_USERNAME}}
#            port: ${{env.REMOTE_PORT}}
#            key: ${{env.REMOTE_PRIVATE_KEY}}
#            passphrase: ${{env.REMOTE_PASSPHRASE}}
#            script_stop: true
#            envs:
#              DOCKER_USER,DOCKER_PASS
#            script: |
#              sh start.sh