# Hivenote Backend CI
name: hivenote continuous integration backend

permissions:
  id-token: write
  contents: read

env:
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: eu-central-1
  REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
  REMOTE_USERNAME: ${{ secrets.REMOTE_USERNAME }}
  REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
  REMOTE_PRIVATE_KEY: ${{ secrets.REMOTE_PRIVATE_KEY }}
  REMOTE_PASSPHRASE: ${{ secrets.PASSPHRASE }}

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: maven

      - name: Build with Maven
        run: mvn --B --file pom.xml --update-snapshots clean package

      - name: try to build docker image
        run: |
          sh build.sh

  deploy:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: maven

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{env.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{env.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{env.AWS_REGION}}

      - name: try to build docker image
        run: |
          sh publish.sh

      - uses: Burnett01/rsync-deployments@5.2
        name: Add start.sh script to remote
        with:
          switches: -av --progress
          path: start.sh
          remote_path: ~/start.sh
          remote_host: ${{env.REMOTE_HOST}}
          remote_user: ${{env.REMOTE_USERNAME}}
          remote_port: ${{env.REMOTE_PORT}}
          remote_key: ${{env.REMOTE_PRIVATE_KEY}}
          remote_key_pass: ${{env.REMOTE_PASSPHRASE}}

      - uses: Burnett01/rsync-deployments@5.2
        name: Add docker-compose.yml to remote
        with:
          switches: -av --progress
          path: docker-compose.yml
          remote_path: ~/docker-compose.yml
          remote_host: ${{env.REMOTE_HOST}}
          remote_user: ${{env.REMOTE_USERNAME}}
          remote_port: ${{env.REMOTE_PORT}}
          remote_key: ${{env.REMOTE_PRIVATE_KEY}}
          remote_key_pass: ${{env.REMOTE_PASSPHRASE}}

      - name: Rebuild and start docker containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{env.REMOTE_HOST}}
          username: ${{env.REMOTE_USERNAME}}
          port: ${{env.REMOTE_PORT}}
          key: ${{env.REMOTE_PRIVATE_KEY}}
          passphrase: ${{env.REMOTE_PASSPHRASE}}
          script_stop: true
          script: |
            sh start.sh